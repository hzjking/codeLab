<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan
			base-package="
			hzj.controller,
			hzj.service,
			hzj.security,
			hzj.dao" >
		<context:include-filter type="annotation"
								expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation"
								expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
		<property name="synchronizeOnSession" value="true" />
		<property name="customArgumentResolvers">
			<list>
				<bean class="hzj.interceptor.MyHandlerMethodArgumentResolver" />
			</list>
		</property>
	</bean>

	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 -->
	<!-- <mvc:annotation-driven /> -->
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="hzj.method.CurrentUserMethodArgumentResolver"/>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>



	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		  p:order="1">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="contentType" value="text/html"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>


	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />

	<!-- 静态资源映射 -->
	<!--<mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>-->

	<bean id="springContextsUtil" class="hzj.utils.SpringContextsUtil"></bean>




	<mvc:interceptors>
		<mvc:interceptor>
			<!--设置拦截的路径 -->
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/static/**"/>
            <mvc:exclude-mapping path="/user/login/**"/>
			<mvc:exclude-mapping path="/login/**"/>

			<bean class="hzj.interceptor.MyInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 控制器异常处理 -->
	<bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
	</bean>


</beans>  